# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Docker Setup
      run: docker --version
      
    - name: Start Docker
      run: docker-compose -f docker-compose-v3.yml up -d
      
    - name: Build with Maven
      run: mvn clean install
      
    #- name: Get Allure history
    #  uses: actions/checkout@v3
    #  if: always()
    #  continue-on-error: true
    #  with:
    #    ref: gh-pages
    #    path: gh-pages
        
    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@v1.8
      if: always()
      id: allure-report
      with:
         allure_results: allure-results
         gh_pages: gh-pages
         allure_report: allure-report
         allure_history: allure-history
    - name: Build with Jekyll
      uses: actions/jekyll-build-pages@v1
      if: always()
      with:
          source: ./
          destination: ./_site
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      if: always()
      with:
        path: 'allure-history'
         
    #- name: Publish Allure Report
    #  uses: peaceiris/actions-gh-pages@v3
    #  if: always()
    #  with:
    #    github_token: ${{ secrets.GITHUB_TOKEN }}
    #    publish_branch: gh-pages
    #    publish_dir: allure-history
    
  deploy:
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
      runs-on: ubuntu-latest
      if: always()
      permissions:
        pages: write
        id-token: write
      needs: build
      steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
